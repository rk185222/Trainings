@page "/employeedetails/{id}"

@if (Employee == null || Employee.Department == null)
{
    <div class="spinner"></div>
}
else
{
<div class="row justify-content-center m-3">
    <div class="col-sm-8">
        <div class="card">
            <div class="card-header">
                <h1>@Employee.FirstName @Employee.LastName</h1>
            </div>

            <div class="card-body text-center">
                <img class="card-img-top" src="@Employee.PhotoPath" @onmousemove="@(e => Coordinates = $"X = {e.ClientX} Y = {e.ClientY}")" />
                    <div>@Coordinates</div>

                <h4>Employee ID : @Employee.EmployeeId</h4>
                <h4>Email : @Employee.Email</h4>
                <h4>Department : @Employee.Department.DepartmentName</h4>
            </div>
            <button class="btn btn-primary" @onclick="@Button_Click">@ButtonText</button>
            <div class="card-footer text-center">
                <a href="/" class="btn btn-primary @CssClass">Back</a>
                <a href="@($"editemployee/{Employee.EmployeeId}")" class="btn btn-primary @CssClass">Edit</a>
                <a href="#" class="btn btn-danger @CssClass">Delete</a>
            </div>
        </div>
    </div>
</div>
}

@code {
    public Employee Employee { get; set; }  = new Employee();

    [Inject]
    public IEmployeeService employeeService { get; set; }

    [Parameter]
    public string Id { get; set; }

    protected string Coordinates { get; set; }
    protected string ButtonText { get; set; } = "Hide Footer";
    protected string CssClass { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        Id = Id ?? "1";
        Employee = await employeeService.GetEmployee(int.Parse(Id));
    }

    protected void Button_Click()
    {
        if (ButtonText == "Hide Footer")
        {
            ButtonText = "Show Footer";
            CssClass = "HideFooter";
        }
        else
        {
            CssClass = null;
            ButtonText = "Hide Footer";
        }
    }
}
